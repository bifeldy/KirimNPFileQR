'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wsNPLtoko
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="NPB_ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class NPB_Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ReceiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReceiveItemDepoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReceiveFingerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Receive2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReceiveItemDepo2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveStatus2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReceiveFinger2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TransferNPL.My.MySettings.Default.TransferNPL_wsNPLtoko_NPB_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ReceiveCompleted As ReceiveCompletedEventHandler
        
        '''<remarks/>
        Public Event ReceiveItemDepoCompleted As ReceiveItemDepoCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveStatusCompleted As RetrieveStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event ReceiveFingerCompleted As ReceiveFingerCompletedEventHandler
        
        '''<remarks/>
        Public Event Receive2Completed As Receive2CompletedEventHandler
        
        '''<remarks/>
        Public Event ReceiveItemDepo2Completed As ReceiveItemDepo2CompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveStatus2Completed As RetrieveStatus2CompletedEventHandler
        
        '''<remarks/>
        Public Event ReceiveFinger2Completed As ReceiveFinger2CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Receive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Receive(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal NotaKirim() As Byte, ByVal CabangKirim As String) As String
            Dim results() As Object = Me.Invoke("Receive", New Object() {NotaKirim, CabangKirim})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReceiveAsync(ByVal NotaKirim() As Byte, ByVal CabangKirim As String)
            Me.ReceiveAsync(NotaKirim, CabangKirim, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReceiveAsync(ByVal NotaKirim() As Byte, ByVal CabangKirim As String, ByVal userState As Object)
            If (Me.ReceiveOperationCompleted Is Nothing) Then
                Me.ReceiveOperationCompleted = AddressOf Me.OnReceiveOperationCompleted
            End If
            Me.InvokeAsync("Receive", New Object() {NotaKirim, CabangKirim}, Me.ReceiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnReceiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReceiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReceiveCompleted(Me, New ReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveItemDepo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveItemDepo(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Request() As Byte, ByVal CabangKirim As String) As String
            Dim results() As Object = Me.Invoke("ReceiveItemDepo", New Object() {Request, CabangKirim})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReceiveItemDepoAsync(ByVal Request() As Byte, ByVal CabangKirim As String)
            Me.ReceiveItemDepoAsync(Request, CabangKirim, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReceiveItemDepoAsync(ByVal Request() As Byte, ByVal CabangKirim As String, ByVal userState As Object)
            If (Me.ReceiveItemDepoOperationCompleted Is Nothing) Then
                Me.ReceiveItemDepoOperationCompleted = AddressOf Me.OnReceiveItemDepoOperationCompleted
            End If
            Me.InvokeAsync("ReceiveItemDepo", New Object() {Request, CabangKirim}, Me.ReceiveItemDepoOperationCompleted, userState)
        End Sub
        
        Private Sub OnReceiveItemDepoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReceiveItemDepoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReceiveItemDepoCompleted(Me, New ReceiveItemDepoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveStatus(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Request() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RetrieveStatus", New Object() {Request})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveStatusAsync(ByVal Request() As Byte)
            Me.RetrieveStatusAsync(Request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveStatusAsync(ByVal Request() As Byte, ByVal userState As Object)
            If (Me.RetrieveStatusOperationCompleted Is Nothing) Then
                Me.RetrieveStatusOperationCompleted = AddressOf Me.OnRetrieveStatusOperationCompleted
            End If
            Me.InvokeAsync("RetrieveStatus", New Object() {Request}, Me.RetrieveStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveStatusCompleted(Me, New RetrieveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveFinger", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveFinger(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal NotaKirim() As Byte, ByVal CabangKirim As String) As String
            Dim results() As Object = Me.Invoke("ReceiveFinger", New Object() {NotaKirim, CabangKirim})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReceiveFingerAsync(ByVal NotaKirim() As Byte, ByVal CabangKirim As String)
            Me.ReceiveFingerAsync(NotaKirim, CabangKirim, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReceiveFingerAsync(ByVal NotaKirim() As Byte, ByVal CabangKirim As String, ByVal userState As Object)
            If (Me.ReceiveFingerOperationCompleted Is Nothing) Then
                Me.ReceiveFingerOperationCompleted = AddressOf Me.OnReceiveFingerOperationCompleted
            End If
            Me.InvokeAsync("ReceiveFinger", New Object() {NotaKirim, CabangKirim}, Me.ReceiveFingerOperationCompleted, userState)
        End Sub
        
        Private Sub OnReceiveFingerOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReceiveFingerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReceiveFingerCompleted(Me, New ReceiveFingerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Receive2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Receive2(ByVal NotaKirim As String, ByVal CabangKirim As String) As String
            Dim results() As Object = Me.Invoke("Receive2", New Object() {NotaKirim, CabangKirim})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Receive2Async(ByVal NotaKirim As String, ByVal CabangKirim As String)
            Me.Receive2Async(NotaKirim, CabangKirim, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Receive2Async(ByVal NotaKirim As String, ByVal CabangKirim As String, ByVal userState As Object)
            If (Me.Receive2OperationCompleted Is Nothing) Then
                Me.Receive2OperationCompleted = AddressOf Me.OnReceive2OperationCompleted
            End If
            Me.InvokeAsync("Receive2", New Object() {NotaKirim, CabangKirim}, Me.Receive2OperationCompleted, userState)
        End Sub
        
        Private Sub OnReceive2OperationCompleted(ByVal arg As Object)
            If (Not (Me.Receive2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Receive2Completed(Me, New Receive2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveItemDepo2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveItemDepo2(ByVal Request As String, ByVal CabangKirim As String) As String
            Dim results() As Object = Me.Invoke("ReceiveItemDepo2", New Object() {Request, CabangKirim})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReceiveItemDepo2Async(ByVal Request As String, ByVal CabangKirim As String)
            Me.ReceiveItemDepo2Async(Request, CabangKirim, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReceiveItemDepo2Async(ByVal Request As String, ByVal CabangKirim As String, ByVal userState As Object)
            If (Me.ReceiveItemDepo2OperationCompleted Is Nothing) Then
                Me.ReceiveItemDepo2OperationCompleted = AddressOf Me.OnReceiveItemDepo2OperationCompleted
            End If
            Me.InvokeAsync("ReceiveItemDepo2", New Object() {Request, CabangKirim}, Me.ReceiveItemDepo2OperationCompleted, userState)
        End Sub
        
        Private Sub OnReceiveItemDepo2OperationCompleted(ByVal arg As Object)
            If (Not (Me.ReceiveItemDepo2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReceiveItemDepo2Completed(Me, New ReceiveItemDepo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveStatus2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveStatus2(ByVal TempRequest As String) As String
            Dim results() As Object = Me.Invoke("RetrieveStatus2", New Object() {TempRequest})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveStatus2Async(ByVal TempRequest As String)
            Me.RetrieveStatus2Async(TempRequest, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveStatus2Async(ByVal TempRequest As String, ByVal userState As Object)
            If (Me.RetrieveStatus2OperationCompleted Is Nothing) Then
                Me.RetrieveStatus2OperationCompleted = AddressOf Me.OnRetrieveStatus2OperationCompleted
            End If
            Me.InvokeAsync("RetrieveStatus2", New Object() {TempRequest}, Me.RetrieveStatus2OperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveStatus2OperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveStatus2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveStatus2Completed(Me, New RetrieveStatus2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveFinger2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveFinger2(ByVal NotaKirim As String, ByVal CabangKirim As String) As String
            Dim results() As Object = Me.Invoke("ReceiveFinger2", New Object() {NotaKirim, CabangKirim})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReceiveFinger2Async(ByVal NotaKirim As String, ByVal CabangKirim As String)
            Me.ReceiveFinger2Async(NotaKirim, CabangKirim, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReceiveFinger2Async(ByVal NotaKirim As String, ByVal CabangKirim As String, ByVal userState As Object)
            If (Me.ReceiveFinger2OperationCompleted Is Nothing) Then
                Me.ReceiveFinger2OperationCompleted = AddressOf Me.OnReceiveFinger2OperationCompleted
            End If
            Me.InvokeAsync("ReceiveFinger2", New Object() {NotaKirim, CabangKirim}, Me.ReceiveFinger2OperationCompleted, userState)
        End Sub
        
        Private Sub OnReceiveFinger2OperationCompleted(ByVal arg As Object)
            If (Not (Me.ReceiveFinger2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReceiveFinger2Completed(Me, New ReceiveFinger2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ReceiveCompletedEventHandler(ByVal sender As Object, ByVal e As ReceiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReceiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ReceiveItemDepoCompletedEventHandler(ByVal sender As Object, ByVal e As ReceiveItemDepoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReceiveItemDepoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrieveStatusCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ReceiveFingerCompletedEventHandler(ByVal sender As Object, ByVal e As ReceiveFingerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReceiveFingerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Receive2CompletedEventHandler(ByVal sender As Object, ByVal e As Receive2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Receive2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ReceiveItemDepo2CompletedEventHandler(ByVal sender As Object, ByVal e As ReceiveItemDepo2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReceiveItemDepo2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrieveStatus2CompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveStatus2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveStatus2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ReceiveFinger2CompletedEventHandler(ByVal sender As Object, ByVal e As ReceiveFinger2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReceiveFinger2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
