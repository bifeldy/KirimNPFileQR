//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KirimNPFileQR.wsNPLtoko {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NPB_ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class NPB_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveItemDepoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveOverStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveFingerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Receive2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveItemDepo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveOverStock2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveStatus2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveFinger2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveNPSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NPB_Service() {
            this.Url = global::KirimNPFileQR.Properties.Settings.Default.KirimNPFileQR_wsNPLtoko1_NPB_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReceiveCompletedEventHandler ReceiveCompleted;
        
        /// <remarks/>
        public event ReceiveItemDepoCompletedEventHandler ReceiveItemDepoCompleted;
        
        /// <remarks/>
        public event ReceiveOverStockCompletedEventHandler ReceiveOverStockCompleted;
        
        /// <remarks/>
        public event RetrieveStatusCompletedEventHandler RetrieveStatusCompleted;
        
        /// <remarks/>
        public event ReceiveFingerCompletedEventHandler ReceiveFingerCompleted;
        
        /// <remarks/>
        public event Receive2CompletedEventHandler Receive2Completed;
        
        /// <remarks/>
        public event ReceiveItemDepo2CompletedEventHandler ReceiveItemDepo2Completed;
        
        /// <remarks/>
        public event ReceiveOverStock2CompletedEventHandler ReceiveOverStock2Completed;
        
        /// <remarks/>
        public event RetrieveStatus2CompletedEventHandler RetrieveStatus2Completed;
        
        /// <remarks/>
        public event ReceiveFinger2CompletedEventHandler ReceiveFinger2Completed;
        
        /// <remarks/>
        public event ReceiveNPSCompletedEventHandler ReceiveNPSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Receive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Receive([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] NotaKirim, string CabangKirim) {
            object[] results = this.Invoke("Receive", new object[] {
                        NotaKirim,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveAsync(byte[] NotaKirim, string CabangKirim) {
            this.ReceiveAsync(NotaKirim, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveAsync(byte[] NotaKirim, string CabangKirim, object userState) {
            if ((this.ReceiveOperationCompleted == null)) {
                this.ReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveOperationCompleted);
            }
            this.InvokeAsync("Receive", new object[] {
                        NotaKirim,
                        CabangKirim}, this.ReceiveOperationCompleted, userState);
        }
        
        private void OnReceiveOperationCompleted(object arg) {
            if ((this.ReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveCompleted(this, new ReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveItemDepo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveItemDepo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Request, string CabangKirim) {
            object[] results = this.Invoke("ReceiveItemDepo", new object[] {
                        Request,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveItemDepoAsync(byte[] Request, string CabangKirim) {
            this.ReceiveItemDepoAsync(Request, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveItemDepoAsync(byte[] Request, string CabangKirim, object userState) {
            if ((this.ReceiveItemDepoOperationCompleted == null)) {
                this.ReceiveItemDepoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveItemDepoOperationCompleted);
            }
            this.InvokeAsync("ReceiveItemDepo", new object[] {
                        Request,
                        CabangKirim}, this.ReceiveItemDepoOperationCompleted, userState);
        }
        
        private void OnReceiveItemDepoOperationCompleted(object arg) {
            if ((this.ReceiveItemDepoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveItemDepoCompleted(this, new ReceiveItemDepoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveOverStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveOverStock([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Request, string CabangKirim) {
            object[] results = this.Invoke("ReceiveOverStock", new object[] {
                        Request,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveOverStockAsync(byte[] Request, string CabangKirim) {
            this.ReceiveOverStockAsync(Request, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveOverStockAsync(byte[] Request, string CabangKirim, object userState) {
            if ((this.ReceiveOverStockOperationCompleted == null)) {
                this.ReceiveOverStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveOverStockOperationCompleted);
            }
            this.InvokeAsync("ReceiveOverStock", new object[] {
                        Request,
                        CabangKirim}, this.ReceiveOverStockOperationCompleted, userState);
        }
        
        private void OnReceiveOverStockOperationCompleted(object arg) {
            if ((this.ReceiveOverStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveOverStockCompleted(this, new ReceiveOverStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RetrieveStatus([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Request) {
            object[] results = this.Invoke("RetrieveStatus", new object[] {
                        Request});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveStatusAsync(byte[] Request) {
            this.RetrieveStatusAsync(Request, null);
        }
        
        /// <remarks/>
        public void RetrieveStatusAsync(byte[] Request, object userState) {
            if ((this.RetrieveStatusOperationCompleted == null)) {
                this.RetrieveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveStatusOperationCompleted);
            }
            this.InvokeAsync("RetrieveStatus", new object[] {
                        Request}, this.RetrieveStatusOperationCompleted, userState);
        }
        
        private void OnRetrieveStatusOperationCompleted(object arg) {
            if ((this.RetrieveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveStatusCompleted(this, new RetrieveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveFinger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveFinger([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] NotaKirim, string CabangKirim) {
            object[] results = this.Invoke("ReceiveFinger", new object[] {
                        NotaKirim,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveFingerAsync(byte[] NotaKirim, string CabangKirim) {
            this.ReceiveFingerAsync(NotaKirim, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveFingerAsync(byte[] NotaKirim, string CabangKirim, object userState) {
            if ((this.ReceiveFingerOperationCompleted == null)) {
                this.ReceiveFingerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveFingerOperationCompleted);
            }
            this.InvokeAsync("ReceiveFinger", new object[] {
                        NotaKirim,
                        CabangKirim}, this.ReceiveFingerOperationCompleted, userState);
        }
        
        private void OnReceiveFingerOperationCompleted(object arg) {
            if ((this.ReceiveFingerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveFingerCompleted(this, new ReceiveFingerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Receive2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Receive2(string NotaKirim, string CabangKirim) {
            object[] results = this.Invoke("Receive2", new object[] {
                        NotaKirim,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Receive2Async(string NotaKirim, string CabangKirim) {
            this.Receive2Async(NotaKirim, CabangKirim, null);
        }
        
        /// <remarks/>
        public void Receive2Async(string NotaKirim, string CabangKirim, object userState) {
            if ((this.Receive2OperationCompleted == null)) {
                this.Receive2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceive2OperationCompleted);
            }
            this.InvokeAsync("Receive2", new object[] {
                        NotaKirim,
                        CabangKirim}, this.Receive2OperationCompleted, userState);
        }
        
        private void OnReceive2OperationCompleted(object arg) {
            if ((this.Receive2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Receive2Completed(this, new Receive2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveItemDepo2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveItemDepo2(string Request, string CabangKirim) {
            object[] results = this.Invoke("ReceiveItemDepo2", new object[] {
                        Request,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveItemDepo2Async(string Request, string CabangKirim) {
            this.ReceiveItemDepo2Async(Request, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveItemDepo2Async(string Request, string CabangKirim, object userState) {
            if ((this.ReceiveItemDepo2OperationCompleted == null)) {
                this.ReceiveItemDepo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveItemDepo2OperationCompleted);
            }
            this.InvokeAsync("ReceiveItemDepo2", new object[] {
                        Request,
                        CabangKirim}, this.ReceiveItemDepo2OperationCompleted, userState);
        }
        
        private void OnReceiveItemDepo2OperationCompleted(object arg) {
            if ((this.ReceiveItemDepo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveItemDepo2Completed(this, new ReceiveItemDepo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveOverStock2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveOverStock2(string Request, string CabangKirim) {
            object[] results = this.Invoke("ReceiveOverStock2", new object[] {
                        Request,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveOverStock2Async(string Request, string CabangKirim) {
            this.ReceiveOverStock2Async(Request, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveOverStock2Async(string Request, string CabangKirim, object userState) {
            if ((this.ReceiveOverStock2OperationCompleted == null)) {
                this.ReceiveOverStock2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveOverStock2OperationCompleted);
            }
            this.InvokeAsync("ReceiveOverStock2", new object[] {
                        Request,
                        CabangKirim}, this.ReceiveOverStock2OperationCompleted, userState);
        }
        
        private void OnReceiveOverStock2OperationCompleted(object arg) {
            if ((this.ReceiveOverStock2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveOverStock2Completed(this, new ReceiveOverStock2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveStatus2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveStatus2(string TempRequest) {
            object[] results = this.Invoke("RetrieveStatus2", new object[] {
                        TempRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveStatus2Async(string TempRequest) {
            this.RetrieveStatus2Async(TempRequest, null);
        }
        
        /// <remarks/>
        public void RetrieveStatus2Async(string TempRequest, object userState) {
            if ((this.RetrieveStatus2OperationCompleted == null)) {
                this.RetrieveStatus2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveStatus2OperationCompleted);
            }
            this.InvokeAsync("RetrieveStatus2", new object[] {
                        TempRequest}, this.RetrieveStatus2OperationCompleted, userState);
        }
        
        private void OnRetrieveStatus2OperationCompleted(object arg) {
            if ((this.RetrieveStatus2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveStatus2Completed(this, new RetrieveStatus2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveFinger2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveFinger2(string NotaKirim, string CabangKirim) {
            object[] results = this.Invoke("ReceiveFinger2", new object[] {
                        NotaKirim,
                        CabangKirim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveFinger2Async(string NotaKirim, string CabangKirim) {
            this.ReceiveFinger2Async(NotaKirim, CabangKirim, null);
        }
        
        /// <remarks/>
        public void ReceiveFinger2Async(string NotaKirim, string CabangKirim, object userState) {
            if ((this.ReceiveFinger2OperationCompleted == null)) {
                this.ReceiveFinger2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveFinger2OperationCompleted);
            }
            this.InvokeAsync("ReceiveFinger2", new object[] {
                        NotaKirim,
                        CabangKirim}, this.ReceiveFinger2OperationCompleted, userState);
        }
        
        private void OnReceiveFinger2OperationCompleted(object arg) {
            if ((this.ReceiveFinger2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveFinger2Completed(this, new ReceiveFinger2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveNPS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveNPS(string Data) {
            object[] results = this.Invoke("ReceiveNPS", new object[] {
                        Data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveNPSAsync(string Data) {
            this.ReceiveNPSAsync(Data, null);
        }
        
        /// <remarks/>
        public void ReceiveNPSAsync(string Data, object userState) {
            if ((this.ReceiveNPSOperationCompleted == null)) {
                this.ReceiveNPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveNPSOperationCompleted);
            }
            this.InvokeAsync("ReceiveNPS", new object[] {
                        Data}, this.ReceiveNPSOperationCompleted, userState);
        }
        
        private void OnReceiveNPSOperationCompleted(object arg) {
            if ((this.ReceiveNPSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveNPSCompleted(this, new ReceiveNPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveCompletedEventHandler(object sender, ReceiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveItemDepoCompletedEventHandler(object sender, ReceiveItemDepoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveItemDepoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveItemDepoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveOverStockCompletedEventHandler(object sender, ReceiveOverStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveOverStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveOverStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RetrieveStatusCompletedEventHandler(object sender, RetrieveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveFingerCompletedEventHandler(object sender, ReceiveFingerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveFingerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveFingerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Receive2CompletedEventHandler(object sender, Receive2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Receive2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveItemDepo2CompletedEventHandler(object sender, ReceiveItemDepo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveItemDepo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveItemDepo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveOverStock2CompletedEventHandler(object sender, ReceiveOverStock2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveOverStock2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveOverStock2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RetrieveStatus2CompletedEventHandler(object sender, RetrieveStatus2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveStatus2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveStatus2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveFinger2CompletedEventHandler(object sender, ReceiveFinger2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveFinger2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveFinger2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveNPSCompletedEventHandler(object sender, ReceiveNPSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveNPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveNPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591